/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/diacritics/index.js":
/*!******************************************!*\
  !*** ./node_modules/diacritics/index.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("exports.remove = removeDiacritics;\n\nvar replacementList = [\n  {\n    base: ' ',\n    chars: \"\\u00A0\",\n  }, {\n    base: '0',\n    chars: \"\\u07C0\",\n  }, {\n    base: 'A',\n    chars: \"\\u24B6\\uFF21\\u00C0\\u00C1\\u00C2\\u1EA6\\u1EA4\\u1EAA\\u1EA8\\u00C3\\u0100\\u0102\\u1EB0\\u1EAE\\u1EB4\\u1EB2\\u0226\\u01E0\\u00C4\\u01DE\\u1EA2\\u00C5\\u01FA\\u01CD\\u0200\\u0202\\u1EA0\\u1EAC\\u1EB6\\u1E00\\u0104\\u023A\\u2C6F\",\n  }, {\n    base: 'AA',\n    chars: \"\\uA732\",\n  }, {\n    base: 'AE',\n    chars: \"\\u00C6\\u01FC\\u01E2\",\n  }, {\n    base: 'AO',\n    chars: \"\\uA734\",\n  }, {\n    base: 'AU',\n    chars: \"\\uA736\",\n  }, {\n    base: 'AV',\n    chars: \"\\uA738\\uA73A\",\n  }, {\n    base: 'AY',\n    chars: \"\\uA73C\",\n  }, {\n    base: 'B',\n    chars: \"\\u24B7\\uFF22\\u1E02\\u1E04\\u1E06\\u0243\\u0181\",\n  }, {\n    base: 'C',\n    chars: \"\\u24b8\\uff23\\uA73E\\u1E08\\u0106\\u0043\\u0108\\u010A\\u010C\\u00C7\\u0187\\u023B\",\n  }, {\n    base: 'D',\n    chars: \"\\u24B9\\uFF24\\u1E0A\\u010E\\u1E0C\\u1E10\\u1E12\\u1E0E\\u0110\\u018A\\u0189\\u1D05\\uA779\",\n  }, {\n    base: 'Dh',\n    chars: \"\\u00D0\",\n  }, {\n    base: 'DZ',\n    chars: \"\\u01F1\\u01C4\",\n  }, {\n    base: 'Dz',\n    chars: \"\\u01F2\\u01C5\",\n  }, {\n    base: 'E',\n    chars: \"\\u025B\\u24BA\\uFF25\\u00C8\\u00C9\\u00CA\\u1EC0\\u1EBE\\u1EC4\\u1EC2\\u1EBC\\u0112\\u1E14\\u1E16\\u0114\\u0116\\u00CB\\u1EBA\\u011A\\u0204\\u0206\\u1EB8\\u1EC6\\u0228\\u1E1C\\u0118\\u1E18\\u1E1A\\u0190\\u018E\\u1D07\",\n  }, {\n    base: 'F',\n    chars: \"\\uA77C\\u24BB\\uFF26\\u1E1E\\u0191\\uA77B\",\n  }, {\n    base: 'G',\n    chars: \"\\u24BC\\uFF27\\u01F4\\u011C\\u1E20\\u011E\\u0120\\u01E6\\u0122\\u01E4\\u0193\\uA7A0\\uA77D\\uA77E\\u0262\",\n  }, {\n    base: 'H',\n    chars: \"\\u24BD\\uFF28\\u0124\\u1E22\\u1E26\\u021E\\u1E24\\u1E28\\u1E2A\\u0126\\u2C67\\u2C75\\uA78D\",\n  }, {\n    base: 'I',\n    chars: \"\\u24BE\\uFF29\\xCC\\xCD\\xCE\\u0128\\u012A\\u012C\\u0130\\xCF\\u1E2E\\u1EC8\\u01CF\\u0208\\u020A\\u1ECA\\u012E\\u1E2C\\u0197\",\n  }, {\n    base: 'J',\n    chars: \"\\u24BF\\uFF2A\\u0134\\u0248\\u0237\",\n  }, {\n    base: 'K',\n    chars: \"\\u24C0\\uFF2B\\u1E30\\u01E8\\u1E32\\u0136\\u1E34\\u0198\\u2C69\\uA740\\uA742\\uA744\\uA7A2\",\n  }, {\n    base: 'L',\n    chars: \"\\u24C1\\uFF2C\\u013F\\u0139\\u013D\\u1E36\\u1E38\\u013B\\u1E3C\\u1E3A\\u0141\\u023D\\u2C62\\u2C60\\uA748\\uA746\\uA780\",\n  }, {\n    base: 'LJ',\n    chars: \"\\u01C7\",\n  }, {\n    base: 'Lj',\n    chars: \"\\u01C8\",\n  }, {\n    base: 'M',\n    chars: \"\\u24C2\\uFF2D\\u1E3E\\u1E40\\u1E42\\u2C6E\\u019C\\u03FB\",\n  }, {\n    base: 'N',\n    chars: \"\\uA7A4\\u0220\\u24C3\\uFF2E\\u01F8\\u0143\\xD1\\u1E44\\u0147\\u1E46\\u0145\\u1E4A\\u1E48\\u019D\\uA790\\u1D0E\",\n  }, {\n    base: 'NJ',\n    chars: \"\\u01CA\",\n  }, {\n    base: 'Nj',\n    chars: \"\\u01CB\",\n  }, {\n    base: 'O',\n    chars: \"\\u24C4\\uFF2F\\xD2\\xD3\\xD4\\u1ED2\\u1ED0\\u1ED6\\u1ED4\\xD5\\u1E4C\\u022C\\u1E4E\\u014C\\u1E50\\u1E52\\u014E\\u022E\\u0230\\xD6\\u022A\\u1ECE\\u0150\\u01D1\\u020C\\u020E\\u01A0\\u1EDC\\u1EDA\\u1EE0\\u1EDE\\u1EE2\\u1ECC\\u1ED8\\u01EA\\u01EC\\xD8\\u01FE\\u0186\\u019F\\uA74A\\uA74C\",\n  }, {\n    base: 'OE',\n    chars: \"\\u0152\",\n  }, {\n    base: 'OI',\n    chars: \"\\u01A2\",\n  }, {\n    base: 'OO',\n    chars: \"\\uA74E\",\n  }, {\n    base: 'OU',\n    chars: \"\\u0222\",\n  }, {\n    base: 'P',\n    chars: \"\\u24C5\\uFF30\\u1E54\\u1E56\\u01A4\\u2C63\\uA750\\uA752\\uA754\",\n  }, {\n    base: 'Q',\n    chars: \"\\u24C6\\uFF31\\uA756\\uA758\\u024A\",\n  }, {\n    base: 'R',\n    chars: \"\\u24C7\\uFF32\\u0154\\u1E58\\u0158\\u0210\\u0212\\u1E5A\\u1E5C\\u0156\\u1E5E\\u024C\\u2C64\\uA75A\\uA7A6\\uA782\",\n  }, {\n    base: 'S',\n    chars: \"\\u24C8\\uFF33\\u1E9E\\u015A\\u1E64\\u015C\\u1E60\\u0160\\u1E66\\u1E62\\u1E68\\u0218\\u015E\\u2C7E\\uA7A8\\uA784\",\n  }, {\n    base: 'T',\n    chars: \"\\u24C9\\uFF34\\u1E6A\\u0164\\u1E6C\\u021A\\u0162\\u1E70\\u1E6E\\u0166\\u01AC\\u01AE\\u023E\\uA786\",\n  }, {\n    base: 'Th',\n    chars: \"\\u00DE\",\n  }, {\n    base: 'TZ',\n    chars: \"\\uA728\",\n  }, {\n    base: 'U',\n    chars: \"\\u24CA\\uFF35\\xD9\\xDA\\xDB\\u0168\\u1E78\\u016A\\u1E7A\\u016C\\xDC\\u01DB\\u01D7\\u01D5\\u01D9\\u1EE6\\u016E\\u0170\\u01D3\\u0214\\u0216\\u01AF\\u1EEA\\u1EE8\\u1EEE\\u1EEC\\u1EF0\\u1EE4\\u1E72\\u0172\\u1E76\\u1E74\\u0244\",\n  }, {\n    base: 'V',\n    chars: \"\\u24CB\\uFF36\\u1E7C\\u1E7E\\u01B2\\uA75E\\u0245\",\n  }, {\n    base: 'VY',\n    chars: \"\\uA760\",\n  }, {\n    base: 'W',\n    chars: \"\\u24CC\\uFF37\\u1E80\\u1E82\\u0174\\u1E86\\u1E84\\u1E88\\u2C72\",\n  }, {\n    base: 'X',\n    chars: \"\\u24CD\\uFF38\\u1E8A\\u1E8C\",\n  }, {\n    base: 'Y',\n    chars: \"\\u24CE\\uFF39\\u1EF2\\xDD\\u0176\\u1EF8\\u0232\\u1E8E\\u0178\\u1EF6\\u1EF4\\u01B3\\u024E\\u1EFE\",\n  }, {\n    base: 'Z',\n    chars: \"\\u24CF\\uFF3A\\u0179\\u1E90\\u017B\\u017D\\u1E92\\u1E94\\u01B5\\u0224\\u2C7F\\u2C6B\\uA762\",\n  }, {\n    base: 'a',\n    chars: \"\\u24D0\\uFF41\\u1E9A\\u00E0\\u00E1\\u00E2\\u1EA7\\u1EA5\\u1EAB\\u1EA9\\u00E3\\u0101\\u0103\\u1EB1\\u1EAF\\u1EB5\\u1EB3\\u0227\\u01E1\\u00E4\\u01DF\\u1EA3\\u00E5\\u01FB\\u01CE\\u0201\\u0203\\u1EA1\\u1EAD\\u1EB7\\u1E01\\u0105\\u2C65\\u0250\\u0251\",\n  }, {\n    base: 'aa',\n    chars: \"\\uA733\",\n  }, {\n    base: 'ae',\n    chars: \"\\u00E6\\u01FD\\u01E3\",\n  }, {\n    base: 'ao',\n    chars: \"\\uA735\",\n  }, {\n    base: 'au',\n    chars: \"\\uA737\",\n  }, {\n    base: 'av',\n    chars: \"\\uA739\\uA73B\",\n  }, {\n    base: 'ay',\n    chars: \"\\uA73D\",\n  }, {\n    base: 'b',\n    chars: \"\\u24D1\\uFF42\\u1E03\\u1E05\\u1E07\\u0180\\u0183\\u0253\\u0182\",\n  }, {\n    base: 'c',\n    chars: \"\\uFF43\\u24D2\\u0107\\u0109\\u010B\\u010D\\u00E7\\u1E09\\u0188\\u023C\\uA73F\\u2184\",\n  }, {\n    base: 'd',\n    chars: \"\\u24D3\\uFF44\\u1E0B\\u010F\\u1E0D\\u1E11\\u1E13\\u1E0F\\u0111\\u018C\\u0256\\u0257\\u018B\\u13E7\\u0501\\uA7AA\",\n  }, {\n    base: 'dh',\n    chars: \"\\u00F0\",\n  }, {\n    base: 'dz',\n    chars: \"\\u01F3\\u01C6\",\n  }, {\n    base: 'e',\n    chars: \"\\u24D4\\uFF45\\u00E8\\u00E9\\u00EA\\u1EC1\\u1EBF\\u1EC5\\u1EC3\\u1EBD\\u0113\\u1E15\\u1E17\\u0115\\u0117\\u00EB\\u1EBB\\u011B\\u0205\\u0207\\u1EB9\\u1EC7\\u0229\\u1E1D\\u0119\\u1E19\\u1E1B\\u0247\\u01DD\",\n  }, {\n    base: 'f',\n    chars: \"\\u24D5\\uFF46\\u1E1F\\u0192\",\n  }, {\n    base: 'ff',\n    chars: \"\\uFB00\",\n  }, {\n    base: 'fi',\n    chars: \"\\uFB01\",\n  }, {\n    base: 'fl',\n    chars: \"\\uFB02\",\n  }, {\n    base: 'ffi',\n    chars: \"\\uFB03\",\n  }, {\n    base: 'ffl',\n    chars: \"\\uFB04\",\n  }, {\n    base: 'g',\n    chars: \"\\u24D6\\uFF47\\u01F5\\u011D\\u1E21\\u011F\\u0121\\u01E7\\u0123\\u01E5\\u0260\\uA7A1\\uA77F\\u1D79\",\n  }, {\n    base: 'h',\n    chars: \"\\u24D7\\uFF48\\u0125\\u1E23\\u1E27\\u021F\\u1E25\\u1E29\\u1E2B\\u1E96\\u0127\\u2C68\\u2C76\\u0265\",\n  }, {\n    base: 'hv',\n    chars: \"\\u0195\",\n  }, {\n    base: 'i',\n    chars: \"\\u24D8\\uFF49\\xEC\\xED\\xEE\\u0129\\u012B\\u012D\\xEF\\u1E2F\\u1EC9\\u01D0\\u0209\\u020B\\u1ECB\\u012F\\u1E2D\\u0268\\u0131\",\n  }, {\n    base: 'j',\n    chars: \"\\u24D9\\uFF4A\\u0135\\u01F0\\u0249\",\n  }, {\n    base: 'k',\n    chars: \"\\u24DA\\uFF4B\\u1E31\\u01E9\\u1E33\\u0137\\u1E35\\u0199\\u2C6A\\uA741\\uA743\\uA745\\uA7A3\",\n  }, {\n    base: 'l',\n    chars: \"\\u24DB\\uFF4C\\u0140\\u013A\\u013E\\u1E37\\u1E39\\u013C\\u1E3D\\u1E3B\\u017F\\u0142\\u019A\\u026B\\u2C61\\uA749\\uA781\\uA747\\u026D\",\n  }, {\n    base: 'lj',\n    chars: \"\\u01C9\",\n  }, {\n    base: 'm',\n    chars: \"\\u24DC\\uFF4D\\u1E3F\\u1E41\\u1E43\\u0271\\u026F\",\n  }, {\n    base: 'n',\n    chars: \"\\u24DD\\uFF4E\\u01F9\\u0144\\xF1\\u1E45\\u0148\\u1E47\\u0146\\u1E4B\\u1E49\\u019E\\u0272\\u0149\\uA791\\uA7A5\\u043B\\u0509\",\n  }, {\n    base: 'nj',\n    chars: \"\\u01CC\",\n  }, {\n    base: 'o',\n    chars: \"\\u24DE\\uFF4F\\xF2\\xF3\\xF4\\u1ED3\\u1ED1\\u1ED7\\u1ED5\\xF5\\u1E4D\\u022D\\u1E4F\\u014D\\u1E51\\u1E53\\u014F\\u022F\\u0231\\xF6\\u022B\\u1ECF\\u0151\\u01D2\\u020D\\u020F\\u01A1\\u1EDD\\u1EDB\\u1EE1\\u1EDF\\u1EE3\\u1ECD\\u1ED9\\u01EB\\u01ED\\xF8\\u01FF\\uA74B\\uA74D\\u0275\\u0254\\u1D11\",\n  }, {\n    base: 'oe',\n    chars: \"\\u0153\",\n  }, {\n    base: 'oi',\n    chars: \"\\u01A3\",\n  }, {\n    base: 'oo',\n    chars: \"\\uA74F\",\n  }, {\n    base: 'ou',\n    chars: \"\\u0223\",\n  }, {\n    base: 'p',\n    chars: \"\\u24DF\\uFF50\\u1E55\\u1E57\\u01A5\\u1D7D\\uA751\\uA753\\uA755\\u03C1\",\n  }, {\n    base: 'q',\n    chars: \"\\u24E0\\uFF51\\u024B\\uA757\\uA759\",\n  }, {\n    base: 'r',\n    chars: \"\\u24E1\\uFF52\\u0155\\u1E59\\u0159\\u0211\\u0213\\u1E5B\\u1E5D\\u0157\\u1E5F\\u024D\\u027D\\uA75B\\uA7A7\\uA783\",\n  }, {\n    base: 's',\n    chars: \"\\u24E2\\uFF53\\u015B\\u1E65\\u015D\\u1E61\\u0161\\u1E67\\u1E63\\u1E69\\u0219\\u015F\\u023F\\uA7A9\\uA785\\u1E9B\\u0282\",\n  }, {\n    base: 'ss',\n    chars: \"\\xDF\",\n  }, {\n    base: 't',\n    chars: \"\\u24E3\\uFF54\\u1E6B\\u1E97\\u0165\\u1E6D\\u021B\\u0163\\u1E71\\u1E6F\\u0167\\u01AD\\u0288\\u2C66\\uA787\",\n  }, {\n    base: 'th',\n    chars: \"\\u00FE\",\n  }, {\n    base: 'tz',\n    chars: \"\\uA729\",\n  }, {\n    base: 'u',\n    chars: \"\\u24E4\\uFF55\\xF9\\xFA\\xFB\\u0169\\u1E79\\u016B\\u1E7B\\u016D\\xFC\\u01DC\\u01D8\\u01D6\\u01DA\\u1EE7\\u016F\\u0171\\u01D4\\u0215\\u0217\\u01B0\\u1EEB\\u1EE9\\u1EEF\\u1EED\\u1EF1\\u1EE5\\u1E73\\u0173\\u1E77\\u1E75\\u0289\",\n  }, {\n    base: 'v',\n    chars: \"\\u24E5\\uFF56\\u1E7D\\u1E7F\\u028B\\uA75F\\u028C\",\n  }, {\n    base: 'vy',\n    chars: \"\\uA761\",\n  }, {\n    base: 'w',\n    chars: \"\\u24E6\\uFF57\\u1E81\\u1E83\\u0175\\u1E87\\u1E85\\u1E98\\u1E89\\u2C73\",\n  }, {\n    base: 'x',\n    chars: \"\\u24E7\\uFF58\\u1E8B\\u1E8D\",\n  }, {\n    base: 'y',\n    chars: \"\\u24E8\\uFF59\\u1EF3\\xFD\\u0177\\u1EF9\\u0233\\u1E8F\\xFF\\u1EF7\\u1E99\\u1EF5\\u01B4\\u024F\\u1EFF\",\n  }, {\n    base: 'z',\n    chars: \"\\u24E9\\uFF5A\\u017A\\u1E91\\u017C\\u017E\\u1E93\\u1E95\\u01B6\\u0225\\u0240\\u2C6C\\uA763\",\n  }\n];\n\nvar diacriticsMap = {};\nfor (var i = 0; i < replacementList.length; i += 1) {\n  var chars = replacementList[i].chars;\n  for (var j = 0; j < chars.length; j += 1) {\n    diacriticsMap[chars[j]] = replacementList[i].base;\n  }\n}\n\nfunction removeDiacritics(str) {\n  return str.replace(/[^\\u0000-\\u007e]/g, function(c) {\n    return diacriticsMap[c] || c;\n  });\n}\n\nexports.replacementList = replacementList;\nexports.diacriticsMap = diacriticsMap;\n\n\n//# sourceURL=webpack://odin-weather-app/./node_modules/diacritics/index.js?");

/***/ }),

/***/ "./node_modules/i18n-iso-countries/index.js":
/*!**************************************************!*\
  !*** ./node_modules/i18n-iso-countries/index.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nconst codes = __webpack_require__(/*! ./codes.json */ \"./node_modules/i18n-iso-countries/codes.json\");\nconst supportedLocales = __webpack_require__(/*! ./supportedLocales.json */ \"./node_modules/i18n-iso-countries/supportedLocales.json\");\nconst removeDiacritics = (__webpack_require__(/*! diacritics */ \"./node_modules/diacritics/index.js\").remove);\nconst registeredLocales = {};\n\n/*\n * All codes map to ISO 3166-1 alpha-2\n */\nconst alpha2 = {},\n  alpha3 = {},\n  numeric = {},\n  invertedNumeric = {};\n\ncodes.forEach(function (codeInformation) {\n  const s = codeInformation;\n  alpha2[s[0]] = s[1];\n  alpha3[s[1]] = s[0];\n  numeric[s[2]] = s[0];\n  invertedNumeric[s[0]] = s[2];\n});\n\n/**\n * @private\n * @param {number} code\n */\nfunction formatNumericCode(code) {\n  return String(\"000\" + (code ? code : \"\")).slice(-3);\n}\n\n/**\n * @private\n * Avoid using obj.hasOwnProperty directly as `hasOwnProperty` could be a\n * property in itself ({ hasOwnProperty: 1 }) and cause weird bugs\n * https://eslint.org/docs/rules/no-prototype-builtins\n */\nfunction hasOwnProperty(object, property) {\n  return Object.prototype.hasOwnProperty.call(object, property);\n}\n\n/**\n * @private\n * Pass localeList through a filter and return a newLocaleList obj\n * with the same structure of the old localeList.\n *\n * @param {LocalizedCountryNames} localeList  Local List in raw\n * @param {Function} filter    callback to set filter rule\n * @return {String | String[]} new filtered Local List\n */\nfunction localeFilter(localeList, filter) {\n  return Object.keys(localeList).reduce(function (newLocaleList, alpha2) {\n    const nameList = localeList[alpha2];\n    newLocaleList[alpha2] = filter(nameList, alpha2);\n    return newLocaleList;\n  }, {});\n}\n\n/**\n * @private\n * Preserve for getName & getNames\n *\n * @param {GetNameOptions.select} type all | official | alias\n * @param countryNameList  string array of country's\n *                         official name and alias\n * @return {String | String[]} of a country name\n */\nfunction filterNameBy(type, countryNameList) {\n  switch (type) {\n    case \"official\":\n      return Array.isArray(countryNameList)\n        ? countryNameList[0]\n        : countryNameList;\n\n    case \"all\":\n      return typeof countryNameList === \"string\"\n        ? [countryNameList]\n        : countryNameList;\n\n    case \"alias\":\n      return Array.isArray(countryNameList)\n        ? countryNameList[1] || countryNameList[0]\n        : countryNameList;\n\n    default:\n      throw new TypeError(\n        \"LocaleNameType must be one of these: all, official, alias!\"\n      );\n  }\n}\n\n/**\n * Register countries in browsers' environment:\n * @param {object} localeData\n * @example countries.registerLocale(require(\"i18n-iso-countries/langs/en.json\"));\n * @return void\n */\nexports.registerLocale = function (localeData) {\n  if (!localeData.locale) {\n    throw new TypeError(\"Missing localeData.locale\");\n  }\n\n  if (!localeData.countries) {\n    throw new TypeError(\"Missing localeData.countries\");\n  }\n\n  registeredLocales[localeData.locale] = localeData.countries;\n};\n\n/*\n * @param code Alpha-3 code\n * @return Alpha-2 code or undefined\n */\nfunction alpha3ToAlpha2(code) {\n  return alpha3[code];\n}\nexports.alpha3ToAlpha2 = alpha3ToAlpha2;\n\n/*\n * @param code Alpha-2 code\n * @return Alpha-3 code or undefined\n */\nfunction alpha2ToAlpha3(code) {\n  return alpha2[code];\n}\nexports.alpha2ToAlpha3 = alpha2ToAlpha3;\n\n/*\n * @param code Alpha-3 code\n * @return Numeric code or undefined\n */\nfunction alpha3ToNumeric(code) {\n  return invertedNumeric[alpha3ToAlpha2(code)];\n}\nexports.alpha3ToNumeric = alpha3ToNumeric;\n\n/*\n * @param code Alpha-2 code\n * @return Numeric code or undefined\n */\nfunction alpha2ToNumeric(code) {\n  return invertedNumeric[code];\n}\nexports.alpha2ToNumeric = alpha2ToNumeric;\n\n/*\n * @param code Numeric code\n * @return Alpha-3 code or undefined\n */\nfunction numericToAlpha3(code) {\n  const padded = formatNumericCode(code);\n  return alpha2ToAlpha3(numeric[padded]);\n}\nexports.numericToAlpha3 = numericToAlpha3;\n\n/*\n * @param code Numeric code\n * @return Alpha-2 code or undefined\n */\nfunction numericToAlpha2(code) {\n  const padded = formatNumericCode(code);\n  return numeric[padded];\n}\nexports.numericToAlpha2 = numericToAlpha2;\n\n/*\n * @param code ISO 3166-1 alpha-2, alpha-3 or numeric code\n * @return ISO 3166-1 alpha-3\n */\nfunction toAlpha3(code) {\n  if (typeof code === \"string\") {\n    if (/^[0-9]*$/.test(code)) {\n      return numericToAlpha3(code);\n    }\n    if (code.length === 2) {\n      return alpha2ToAlpha3(code.toUpperCase());\n    }\n    if (code.length === 3) {\n      return code.toUpperCase();\n    }\n  }\n  if (typeof code === \"number\") {\n    return numericToAlpha3(code);\n  }\n  return undefined;\n}\nexports.toAlpha3 = toAlpha3;\n\n/*\n * @param code ISO 3166-1 alpha-2, alpha-3 or numeric code\n * @return ISO 3166-1 alpha-2\n */\nfunction toAlpha2(code) {\n  if (typeof code === \"string\") {\n    if (/^[0-9]*$/.test(code)) {\n      return numericToAlpha2(code);\n    }\n    if (code.length === 2) {\n      return code.toUpperCase();\n    }\n    if (code.length === 3) {\n      return alpha3ToAlpha2(code.toUpperCase());\n    }\n  }\n  if (typeof code === \"number\") {\n    return numericToAlpha2(code);\n  }\n  return undefined;\n}\nexports.toAlpha2 = toAlpha2;\n\n/**\n * @param {string | number | Alpha2Code | Alpha3Code} code\n * @param {String} lang          language for country name\n * @param {GetNameOptions} options\n * @return {String | String[] | undefined}  name\n */\nexports.getName = function (code, lang, options = {}) {\n  if (!(\"select\" in options)) {\n    options.select = \"official\";\n  }\n  try {\n    const codeMaps = registeredLocales[lang.toLowerCase()];\n    const nameList = codeMaps[toAlpha2(code)];\n    return filterNameBy(options.select, nameList);\n  } catch (err) {\n    return undefined;\n  }\n};\n\n/**\n * @param {String} lang             language for country names\n * @param {GetNameOptions} options   getNames Options\n * @return {LocalizedCountryNames}  country code\n *                                  mapped to county name\n */\nexports.getNames = function (lang, options = {}) {\n  if (!(\"select\" in options)) {\n    options.select = \"official\";\n  }\n  const localeList = registeredLocales[lang.toLowerCase()];\n  if (localeList === undefined) return {};\n  return localeFilter(localeList, function (nameList) {\n    return filterNameBy(options.select, nameList);\n  });\n};\n\n/*\n * @param name name\n * @param lang language for country name\n * @return ISO 3166-1 alpha-2 or undefined\n */\nexports.getAlpha2Code = function (name, lang) {\n  const normalizeString = (string) => string.toLowerCase();\n  const areSimilar = (a, b) => normalizeString(a) === normalizeString(b);\n\n  try {\n    const codenames = registeredLocales[lang.toLowerCase()];\n    for (const p in codenames) {\n      if (!hasOwnProperty(codenames, p)) {\n        continue;\n      }\n      if (typeof codenames[p] === \"string\") {\n        if (areSimilar(codenames[p], name)) {\n          return p;\n        }\n      }\n      if (Array.isArray(codenames[p])) {\n        for (const mappedName of codenames[p]) {\n          if (areSimilar(mappedName, name)) {\n            return p;\n          }\n        }\n      }\n    }\n    return undefined;\n  } catch (err) {\n    return undefined;\n  }\n};\n\n/*\n * @param name name\n * @param lang language for country name\n * @return ISO 3166-1 alpha-2 or undefined\n */\nexports.getSimpleAlpha2Code = function (name, lang) {\n  const normalizeString = (string) => removeDiacritics(string.toLowerCase());\n  const areSimilar = (a, b) => normalizeString(a) === normalizeString(b);\n\n  try {\n    const codenames = registeredLocales[lang.toLowerCase()];\n    for (const p in codenames) {\n      if (!hasOwnProperty(codenames, p)) {\n        continue;\n      }\n      if (typeof codenames[p] === \"string\") {\n        if (areSimilar(codenames[p], name)) {\n          return p;\n        }\n      }\n      if (Array.isArray(codenames[p])) {\n        for (const mappedName of codenames[p]) {\n          if (areSimilar(mappedName, name)) {\n            return p;\n          }\n        }\n      }\n    }\n    return undefined;\n  } catch (err) {\n    return undefined;\n  }\n};\n\n/*\n * @return Object of alpha-2 codes mapped to alpha-3 codes\n */\nexports.getAlpha2Codes = function () {\n  return alpha2;\n};\n\n/*\n * @param name name\n * @param lang language for country name\n * @return ISO 3166-1 alpha-3 or undefined\n */\nexports.getAlpha3Code = function (name, lang) {\n  const alpha2 = exports.getAlpha2Code(name, lang);\n  if (alpha2) {\n    return exports.toAlpha3(alpha2);\n  } else {\n    return undefined;\n  }\n};\n\n/*\n * @param name name\n * @param lang language for country name\n * @return ISO 3166-1 alpha-3 or undefined\n */\nexports.getSimpleAlpha3Code = function (name, lang) {\n  const alpha2 = exports.getSimpleAlpha2Code(name, lang);\n  if (alpha2) {\n    return exports.toAlpha3(alpha2);\n  } else {\n    return undefined;\n  }\n};\n\n/*\n * @return Object of alpha-3 codes mapped to alpha-2 codes\n */\nexports.getAlpha3Codes = function () {\n  return alpha3;\n};\n\n/*\n * @return Object of numeric codes mapped to alpha-2 codes\n */\nexports.getNumericCodes = function () {\n  return numeric;\n};\n\n/*\n * @return Array of registered languages\n */\nexports.langs = function () {\n  return Object.keys(registeredLocales);\n};\n\n/*\n * @return Array of supported languages\n */\nexports.getSupportedLanguages = function () {\n  return supportedLocales;\n};\n\n/*\n * @param code ISO 3166-1 alpha-2, alpha-3 or numeric code\n * @return Boolean\n */\nexports.isValid = function (code) {\n  if (!code) {\n    return false;\n  }\n\n  const coerced = code.toString().toUpperCase();\n  return (\n    hasOwnProperty(alpha3, coerced) ||\n    hasOwnProperty(alpha2, coerced) ||\n    hasOwnProperty(numeric, coerced)\n  );\n};\n\n\n//# sourceURL=webpack://odin-weather-app/./node_modules/i18n-iso-countries/index.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("var countries = __webpack_require__(/*! i18n-iso-countries */ \"./node_modules/i18n-iso-countries/index.js\");\r\ncountries.registerLocale(__webpack_require__(/*! i18n-iso-countries/langs/en.json */ \"./node_modules/i18n-iso-countries/langs/en.json\"));\r\n\r\nlet city = 'Cebu';\r\nconst apiKey = '9a11773e29c804c87a91ed347a5f94c0';\r\n\r\nconst searchButton = document.querySelector('.search button');\r\n\r\nsearchButton.addEventListener('click', () => {\r\n  const city = document.querySelector('#search').value;\r\n  refresh(city);\r\n});\r\n\r\nrefresh(city);\r\n\r\nfunction refresh(city) {\r\n  getWeatherData(city).then((data) => {\r\n    const dataString = JSON.stringify(data, null, 4);\r\n    const city = data.name;\r\n    const country = countries.getName(data.sys.country, 'en', {\r\n      select: 'official',\r\n    });\r\n    const temp = data.main.temp;\r\n    const feelsLike = data.main.feels_like;\r\n    const humidity = data.main.humidity;\r\n    console.log(dataString);\r\n    const weatherDescription = data.weather[0].description;\r\n    const weatherIcon = data.weather[0].icon;\r\n    const cloudiness = data.clouds.all;\r\n\r\n    displayWeather(data);\r\n\r\n    setWeatherData(\r\n      city,\r\n      country,\r\n      temp,\r\n      feelsLike,\r\n      humidity,\r\n      weatherDescription,\r\n      weatherIcon,\r\n      cloudiness\r\n    );\r\n  });\r\n}\r\n\r\nasync function getWeatherData(cityInput) {\r\n  const response = await fetch(\r\n    `https://api.openweathermap.org/data/2.5/weather?q=${cityInput}&units=metric&appid=${apiKey}`,\r\n    { mode: 'cors' }\r\n  );\r\n  const weatherData = await response.json();\r\n\r\n  return weatherData;\r\n}\r\n\r\nfunction setWeatherData(\r\n  city,\r\n  country,\r\n  temperature,\r\n  feelsLike,\r\n  humidityVal,\r\n  weatherDescription,\r\n  weatherIcon,\r\n  cloudinessVal\r\n) {\r\n  const weatherDesc = document.querySelector('.weather-desc');\r\n  const name = document.querySelector('.name');\r\n  const temp = document.querySelector('.data__temp');\r\n  const tempFeelsLike = document.querySelector('.data__misc__feels-like');\r\n  const humidity = document.querySelector('.data__misc__humidity');\r\n  const cloudiness = document.querySelector('.data__misc__cloudiness');\r\n\r\n  /* assign the passed in values to the webpage display */\r\n  weatherDesc.innerHTML =\r\n    `<img class=\"weather-desc__img\" src=\"https://openweathermap.org/img/wn/${weatherIcon}@2x.png\" alt=\"cloudy\">` +\r\n    weatherDescription\r\n      .split(' ')\r\n      .map((e) => e.toUpperCase()[0] + e.toLowerCase().slice(1))\r\n      .join(' ');\r\n  name.textContent = `${city}, ${country}`;\r\n  temp.textContent = temperature;\r\n  tempFeelsLike.innerHTML =\r\n    '<img src=\"./res/icons/thermometer.svg\" alt=\"Thermometer\" class=\"feels-like--icon\">' +\r\n    `Feels Like: ${feelsLike}`;\r\n  humidity.innerHTML =\r\n    '<img src=\"./res/icons/water-percent.svg\" alt=\"Water Percent\" class=\"humidity--icon\">' +\r\n    `Humidity: ${humidityVal}%`;\r\n  cloudiness.innerHTML =\r\n    '<img src=\"./res/icons/clouds.svg\" alt=\"Cloudiness\" class=\"cloudiness--icon\">' +\r\n    `Cloudiness: ${cloudinessVal}%`;\r\n}\r\n\r\nfunction displayWeather(data) {\r\n  /* Set background depending on weather*/\r\n  switch (data.weather[0].main) {\r\n    case 'Clear':\r\n      document.body.style.backgroundImage = 'url(../res/backgrounds/clear.jpg)';\r\n      break;\r\n    case 'Clouds':\r\n      document.body.style.backgroundImage =\r\n        'url(../res/backgrounds/cloudy.jpg)';\r\n      break;\r\n    case 'Rain':\r\n    case 'Drizzle':\r\n    case 'Mist':\r\n      document.body.style.backgroundImage = 'url(../res/backgrounds/rain.jpg)';\r\n      break;\r\n    case 'Thunderstorm':\r\n      document.body.style.backgroundImage =\r\n        'url(../res/backgrounds/thunder.jpg)';\r\n      break;\r\n    case 'Snow':\r\n      document.body.style.backgroundImage = 'url(../res/backgrounds/snow.jpg)';\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n}\r\n\n\n//# sourceURL=webpack://odin-weather-app/./src/index.js?");

/***/ }),

/***/ "./node_modules/i18n-iso-countries/codes.json":
/*!****************************************************!*\
  !*** ./node_modules/i18n-iso-countries/codes.json ***!
  \****************************************************/
/***/ ((module) => {

"use strict";
eval("module.exports = JSON.parse('[[\"AF\",\"AFG\",\"004\",\"ISO 3166-2:AF\"],[\"AL\",\"ALB\",\"008\",\"ISO 3166-2:AL\"],[\"DZ\",\"DZA\",\"012\",\"ISO 3166-2:DZ\"],[\"AS\",\"ASM\",\"016\",\"ISO 3166-2:AS\"],[\"AD\",\"AND\",\"020\",\"ISO 3166-2:AD\"],[\"AO\",\"AGO\",\"024\",\"ISO 3166-2:AO\"],[\"AI\",\"AIA\",\"660\",\"ISO 3166-2:AI\"],[\"AQ\",\"ATA\",\"010\",\"ISO 3166-2:AQ\"],[\"AG\",\"ATG\",\"028\",\"ISO 3166-2:AG\"],[\"AR\",\"ARG\",\"032\",\"ISO 3166-2:AR\"],[\"AM\",\"ARM\",\"051\",\"ISO 3166-2:AM\"],[\"AW\",\"ABW\",\"533\",\"ISO 3166-2:AW\"],[\"AU\",\"AUS\",\"036\",\"ISO 3166-2:AU\"],[\"AT\",\"AUT\",\"040\",\"ISO 3166-2:AT\"],[\"AZ\",\"AZE\",\"031\",\"ISO 3166-2:AZ\"],[\"BS\",\"BHS\",\"044\",\"ISO 3166-2:BS\"],[\"BH\",\"BHR\",\"048\",\"ISO 3166-2:BH\"],[\"BD\",\"BGD\",\"050\",\"ISO 3166-2:BD\"],[\"BB\",\"BRB\",\"052\",\"ISO 3166-2:BB\"],[\"BY\",\"BLR\",\"112\",\"ISO 3166-2:BY\"],[\"BE\",\"BEL\",\"056\",\"ISO 3166-2:BE\"],[\"BZ\",\"BLZ\",\"084\",\"ISO 3166-2:BZ\"],[\"BJ\",\"BEN\",\"204\",\"ISO 3166-2:BJ\"],[\"BM\",\"BMU\",\"060\",\"ISO 3166-2:BM\"],[\"BT\",\"BTN\",\"064\",\"ISO 3166-2:BT\"],[\"BO\",\"BOL\",\"068\",\"ISO 3166-2:BO\"],[\"BA\",\"BIH\",\"070\",\"ISO 3166-2:BA\"],[\"BW\",\"BWA\",\"072\",\"ISO 3166-2:BW\"],[\"BV\",\"BVT\",\"074\",\"ISO 3166-2:BV\"],[\"BR\",\"BRA\",\"076\",\"ISO 3166-2:BR\"],[\"IO\",\"IOT\",\"086\",\"ISO 3166-2:IO\"],[\"BN\",\"BRN\",\"096\",\"ISO 3166-2:BN\"],[\"BG\",\"BGR\",\"100\",\"ISO 3166-2:BG\"],[\"BF\",\"BFA\",\"854\",\"ISO 3166-2:BF\"],[\"BI\",\"BDI\",\"108\",\"ISO 3166-2:BI\"],[\"KH\",\"KHM\",\"116\",\"ISO 3166-2:KH\"],[\"CM\",\"CMR\",\"120\",\"ISO 3166-2:CM\"],[\"CA\",\"CAN\",\"124\",\"ISO 3166-2:CA\"],[\"CV\",\"CPV\",\"132\",\"ISO 3166-2:CV\"],[\"KY\",\"CYM\",\"136\",\"ISO 3166-2:KY\"],[\"CF\",\"CAF\",\"140\",\"ISO 3166-2:CF\"],[\"TD\",\"TCD\",\"148\",\"ISO 3166-2:TD\"],[\"CL\",\"CHL\",\"152\",\"ISO 3166-2:CL\"],[\"CN\",\"CHN\",\"156\",\"ISO 3166-2:CN\"],[\"CX\",\"CXR\",\"162\",\"ISO 3166-2:CX\"],[\"CC\",\"CCK\",\"166\",\"ISO 3166-2:CC\"],[\"CO\",\"COL\",\"170\",\"ISO 3166-2:CO\"],[\"KM\",\"COM\",\"174\",\"ISO 3166-2:KM\"],[\"CG\",\"COG\",\"178\",\"ISO 3166-2:CG\"],[\"CD\",\"COD\",\"180\",\"ISO 3166-2:CD\"],[\"CK\",\"COK\",\"184\",\"ISO 3166-2:CK\"],[\"CR\",\"CRI\",\"188\",\"ISO 3166-2:CR\"],[\"CI\",\"CIV\",\"384\",\"ISO 3166-2:CI\"],[\"HR\",\"HRV\",\"191\",\"ISO 3166-2:HR\"],[\"CU\",\"CUB\",\"192\",\"ISO 3166-2:CU\"],[\"CY\",\"CYP\",\"196\",\"ISO 3166-2:CY\"],[\"CZ\",\"CZE\",\"203\",\"ISO 3166-2:CZ\"],[\"DK\",\"DNK\",\"208\",\"ISO 3166-2:DK\"],[\"DJ\",\"DJI\",\"262\",\"ISO 3166-2:DJ\"],[\"DM\",\"DMA\",\"212\",\"ISO 3166-2:DM\"],[\"DO\",\"DOM\",\"214\",\"ISO 3166-2:DO\"],[\"EC\",\"ECU\",\"218\",\"ISO 3166-2:EC\"],[\"EG\",\"EGY\",\"818\",\"ISO 3166-2:EG\"],[\"SV\",\"SLV\",\"222\",\"ISO 3166-2:SV\"],[\"GQ\",\"GNQ\",\"226\",\"ISO 3166-2:GQ\"],[\"ER\",\"ERI\",\"232\",\"ISO 3166-2:ER\"],[\"EE\",\"EST\",\"233\",\"ISO 3166-2:EE\"],[\"ET\",\"ETH\",\"231\",\"ISO 3166-2:ET\"],[\"FK\",\"FLK\",\"238\",\"ISO 3166-2:FK\"],[\"FO\",\"FRO\",\"234\",\"ISO 3166-2:FO\"],[\"FJ\",\"FJI\",\"242\",\"ISO 3166-2:FJ\"],[\"FI\",\"FIN\",\"246\",\"ISO 3166-2:FI\"],[\"FR\",\"FRA\",\"250\",\"ISO 3166-2:FR\"],[\"GF\",\"GUF\",\"254\",\"ISO 3166-2:GF\"],[\"PF\",\"PYF\",\"258\",\"ISO 3166-2:PF\"],[\"TF\",\"ATF\",\"260\",\"ISO 3166-2:TF\"],[\"GA\",\"GAB\",\"266\",\"ISO 3166-2:GA\"],[\"GM\",\"GMB\",\"270\",\"ISO 3166-2:GM\"],[\"GE\",\"GEO\",\"268\",\"ISO 3166-2:GE\"],[\"DE\",\"DEU\",\"276\",\"ISO 3166-2:DE\"],[\"GH\",\"GHA\",\"288\",\"ISO 3166-2:GH\"],[\"GI\",\"GIB\",\"292\",\"ISO 3166-2:GI\"],[\"GR\",\"GRC\",\"300\",\"ISO 3166-2:GR\"],[\"GL\",\"GRL\",\"304\",\"ISO 3166-2:GL\"],[\"GD\",\"GRD\",\"308\",\"ISO 3166-2:GD\"],[\"GP\",\"GLP\",\"312\",\"ISO 3166-2:GP\"],[\"GU\",\"GUM\",\"316\",\"ISO 3166-2:GU\"],[\"GT\",\"GTM\",\"320\",\"ISO 3166-2:GT\"],[\"GN\",\"GIN\",\"324\",\"ISO 3166-2:GN\"],[\"GW\",\"GNB\",\"624\",\"ISO 3166-2:GW\"],[\"GY\",\"GUY\",\"328\",\"ISO 3166-2:GY\"],[\"HT\",\"HTI\",\"332\",\"ISO 3166-2:HT\"],[\"HM\",\"HMD\",\"334\",\"ISO 3166-2:HM\"],[\"VA\",\"VAT\",\"336\",\"ISO 3166-2:VA\"],[\"HN\",\"HND\",\"340\",\"ISO 3166-2:HN\"],[\"HK\",\"HKG\",\"344\",\"ISO 3166-2:HK\"],[\"HU\",\"HUN\",\"348\",\"ISO 3166-2:HU\"],[\"IS\",\"ISL\",\"352\",\"ISO 3166-2:IS\"],[\"IN\",\"IND\",\"356\",\"ISO 3166-2:IN\"],[\"ID\",\"IDN\",\"360\",\"ISO 3166-2:ID\"],[\"IR\",\"IRN\",\"364\",\"ISO 3166-2:IR\"],[\"IQ\",\"IRQ\",\"368\",\"ISO 3166-2:IQ\"],[\"IE\",\"IRL\",\"372\",\"ISO 3166-2:IE\"],[\"IL\",\"ISR\",\"376\",\"ISO 3166-2:IL\"],[\"IT\",\"ITA\",\"380\",\"ISO 3166-2:IT\"],[\"JM\",\"JAM\",\"388\",\"ISO 3166-2:JM\"],[\"JP\",\"JPN\",\"392\",\"ISO 3166-2:JP\"],[\"JO\",\"JOR\",\"400\",\"ISO 3166-2:JO\"],[\"KZ\",\"KAZ\",\"398\",\"ISO 3166-2:KZ\"],[\"KE\",\"KEN\",\"404\",\"ISO 3166-2:KE\"],[\"KI\",\"KIR\",\"296\",\"ISO 3166-2:KI\"],[\"KP\",\"PRK\",\"408\",\"ISO 3166-2:KP\"],[\"KR\",\"KOR\",\"410\",\"ISO 3166-2:KR\"],[\"KW\",\"KWT\",\"414\",\"ISO 3166-2:KW\"],[\"KG\",\"KGZ\",\"417\",\"ISO 3166-2:KG\"],[\"LA\",\"LAO\",\"418\",\"ISO 3166-2:LA\"],[\"LV\",\"LVA\",\"428\",\"ISO 3166-2:LV\"],[\"LB\",\"LBN\",\"422\",\"ISO 3166-2:LB\"],[\"LS\",\"LSO\",\"426\",\"ISO 3166-2:LS\"],[\"LR\",\"LBR\",\"430\",\"ISO 3166-2:LR\"],[\"LY\",\"LBY\",\"434\",\"ISO 3166-2:LY\"],[\"LI\",\"LIE\",\"438\",\"ISO 3166-2:LI\"],[\"LT\",\"LTU\",\"440\",\"ISO 3166-2:LT\"],[\"LU\",\"LUX\",\"442\",\"ISO 3166-2:LU\"],[\"MO\",\"MAC\",\"446\",\"ISO 3166-2:MO\"],[\"MG\",\"MDG\",\"450\",\"ISO 3166-2:MG\"],[\"MW\",\"MWI\",\"454\",\"ISO 3166-2:MW\"],[\"MY\",\"MYS\",\"458\",\"ISO 3166-2:MY\"],[\"MV\",\"MDV\",\"462\",\"ISO 3166-2:MV\"],[\"ML\",\"MLI\",\"466\",\"ISO 3166-2:ML\"],[\"MT\",\"MLT\",\"470\",\"ISO 3166-2:MT\"],[\"MH\",\"MHL\",\"584\",\"ISO 3166-2:MH\"],[\"MQ\",\"MTQ\",\"474\",\"ISO 3166-2:MQ\"],[\"MR\",\"MRT\",\"478\",\"ISO 3166-2:MR\"],[\"MU\",\"MUS\",\"480\",\"ISO 3166-2:MU\"],[\"YT\",\"MYT\",\"175\",\"ISO 3166-2:YT\"],[\"MX\",\"MEX\",\"484\",\"ISO 3166-2:MX\"],[\"FM\",\"FSM\",\"583\",\"ISO 3166-2:FM\"],[\"MD\",\"MDA\",\"498\",\"ISO 3166-2:MD\"],[\"MC\",\"MCO\",\"492\",\"ISO 3166-2:MC\"],[\"MN\",\"MNG\",\"496\",\"ISO 3166-2:MN\"],[\"MS\",\"MSR\",\"500\",\"ISO 3166-2:MS\"],[\"MA\",\"MAR\",\"504\",\"ISO 3166-2:MA\"],[\"MZ\",\"MOZ\",\"508\",\"ISO 3166-2:MZ\"],[\"MM\",\"MMR\",\"104\",\"ISO 3166-2:MM\"],[\"NA\",\"NAM\",\"516\",\"ISO 3166-2:NA\"],[\"NR\",\"NRU\",\"520\",\"ISO 3166-2:NR\"],[\"NP\",\"NPL\",\"524\",\"ISO 3166-2:NP\"],[\"NL\",\"NLD\",\"528\",\"ISO 3166-2:NL\"],[\"NC\",\"NCL\",\"540\",\"ISO 3166-2:NC\"],[\"NZ\",\"NZL\",\"554\",\"ISO 3166-2:NZ\"],[\"NI\",\"NIC\",\"558\",\"ISO 3166-2:NI\"],[\"NE\",\"NER\",\"562\",\"ISO 3166-2:NE\"],[\"NG\",\"NGA\",\"566\",\"ISO 3166-2:NG\"],[\"NU\",\"NIU\",\"570\",\"ISO 3166-2:NU\"],[\"NF\",\"NFK\",\"574\",\"ISO 3166-2:NF\"],[\"MP\",\"MNP\",\"580\",\"ISO 3166-2:MP\"],[\"MK\",\"MKD\",\"807\",\"ISO 3166-2:MK\"],[\"NO\",\"NOR\",\"578\",\"ISO 3166-2:NO\"],[\"OM\",\"OMN\",\"512\",\"ISO 3166-2:OM\"],[\"PK\",\"PAK\",\"586\",\"ISO 3166-2:PK\"],[\"PW\",\"PLW\",\"585\",\"ISO 3166-2:PW\"],[\"PS\",\"PSE\",\"275\",\"ISO 3166-2:PS\"],[\"PA\",\"PAN\",\"591\",\"ISO 3166-2:PA\"],[\"PG\",\"PNG\",\"598\",\"ISO 3166-2:PG\"],[\"PY\",\"PRY\",\"600\",\"ISO 3166-2:PY\"],[\"PE\",\"PER\",\"604\",\"ISO 3166-2:PE\"],[\"PH\",\"PHL\",\"608\",\"ISO 3166-2:PH\"],[\"PN\",\"PCN\",\"612\",\"ISO 3166-2:PN\"],[\"PL\",\"POL\",\"616\",\"ISO 3166-2:PL\"],[\"PT\",\"PRT\",\"620\",\"ISO 3166-2:PT\"],[\"PR\",\"PRI\",\"630\",\"ISO 3166-2:PR\"],[\"QA\",\"QAT\",\"634\",\"ISO 3166-2:QA\"],[\"RE\",\"REU\",\"638\",\"ISO 3166-2:RE\"],[\"RO\",\"ROU\",\"642\",\"ISO 3166-2:RO\"],[\"RU\",\"RUS\",\"643\",\"ISO 3166-2:RU\"],[\"RW\",\"RWA\",\"646\",\"ISO 3166-2:RW\"],[\"SH\",\"SHN\",\"654\",\"ISO 3166-2:SH\"],[\"KN\",\"KNA\",\"659\",\"ISO 3166-2:KN\"],[\"LC\",\"LCA\",\"662\",\"ISO 3166-2:LC\"],[\"PM\",\"SPM\",\"666\",\"ISO 3166-2:PM\"],[\"VC\",\"VCT\",\"670\",\"ISO 3166-2:VC\"],[\"WS\",\"WSM\",\"882\",\"ISO 3166-2:WS\"],[\"SM\",\"SMR\",\"674\",\"ISO 3166-2:SM\"],[\"ST\",\"STP\",\"678\",\"ISO 3166-2:ST\"],[\"SA\",\"SAU\",\"682\",\"ISO 3166-2:SA\"],[\"SN\",\"SEN\",\"686\",\"ISO 3166-2:SN\"],[\"SC\",\"SYC\",\"690\",\"ISO 3166-2:SC\"],[\"SL\",\"SLE\",\"694\",\"ISO 3166-2:SL\"],[\"SG\",\"SGP\",\"702\",\"ISO 3166-2:SG\"],[\"SK\",\"SVK\",\"703\",\"ISO 3166-2:SK\"],[\"SI\",\"SVN\",\"705\",\"ISO 3166-2:SI\"],[\"SB\",\"SLB\",\"090\",\"ISO 3166-2:SB\"],[\"SO\",\"SOM\",\"706\",\"ISO 3166-2:SO\"],[\"ZA\",\"ZAF\",\"710\",\"ISO 3166-2:ZA\"],[\"GS\",\"SGS\",\"239\",\"ISO 3166-2:GS\"],[\"ES\",\"ESP\",\"724\",\"ISO 3166-2:ES\"],[\"LK\",\"LKA\",\"144\",\"ISO 3166-2:LK\"],[\"SD\",\"SDN\",\"729\",\"ISO 3166-2:SD\"],[\"SR\",\"SUR\",\"740\",\"ISO 3166-2:SR\"],[\"SJ\",\"SJM\",\"744\",\"ISO 3166-2:SJ\"],[\"SZ\",\"SWZ\",\"748\",\"ISO 3166-2:SZ\"],[\"SE\",\"SWE\",\"752\",\"ISO 3166-2:SE\"],[\"CH\",\"CHE\",\"756\",\"ISO 3166-2:CH\"],[\"SY\",\"SYR\",\"760\",\"ISO 3166-2:SY\"],[\"TW\",\"TWN\",\"158\",\"ISO 3166-2:TW\"],[\"TJ\",\"TJK\",\"762\",\"ISO 3166-2:TJ\"],[\"TZ\",\"TZA\",\"834\",\"ISO 3166-2:TZ\"],[\"TH\",\"THA\",\"764\",\"ISO 3166-2:TH\"],[\"TL\",\"TLS\",\"626\",\"ISO 3166-2:TL\"],[\"TG\",\"TGO\",\"768\",\"ISO 3166-2:TG\"],[\"TK\",\"TKL\",\"772\",\"ISO 3166-2:TK\"],[\"TO\",\"TON\",\"776\",\"ISO 3166-2:TO\"],[\"TT\",\"TTO\",\"780\",\"ISO 3166-2:TT\"],[\"TN\",\"TUN\",\"788\",\"ISO 3166-2:TN\"],[\"TR\",\"TUR\",\"792\",\"ISO 3166-2:TR\"],[\"TM\",\"TKM\",\"795\",\"ISO 3166-2:TM\"],[\"TC\",\"TCA\",\"796\",\"ISO 3166-2:TC\"],[\"TV\",\"TUV\",\"798\",\"ISO 3166-2:TV\"],[\"UG\",\"UGA\",\"800\",\"ISO 3166-2:UG\"],[\"UA\",\"UKR\",\"804\",\"ISO 3166-2:UA\"],[\"AE\",\"ARE\",\"784\",\"ISO 3166-2:AE\"],[\"GB\",\"GBR\",\"826\",\"ISO 3166-2:GB\"],[\"US\",\"USA\",\"840\",\"ISO 3166-2:US\"],[\"UM\",\"UMI\",\"581\",\"ISO 3166-2:UM\"],[\"UY\",\"URY\",\"858\",\"ISO 3166-2:UY\"],[\"UZ\",\"UZB\",\"860\",\"ISO 3166-2:UZ\"],[\"VU\",\"VUT\",\"548\",\"ISO 3166-2:VU\"],[\"VE\",\"VEN\",\"862\",\"ISO 3166-2:VE\"],[\"VN\",\"VNM\",\"704\",\"ISO 3166-2:VN\"],[\"VG\",\"VGB\",\"092\",\"ISO 3166-2:VG\"],[\"VI\",\"VIR\",\"850\",\"ISO 3166-2:VI\"],[\"WF\",\"WLF\",\"876\",\"ISO 3166-2:WF\"],[\"EH\",\"ESH\",\"732\",\"ISO 3166-2:EH\"],[\"YE\",\"YEM\",\"887\",\"ISO 3166-2:YE\"],[\"ZM\",\"ZMB\",\"894\",\"ISO 3166-2:ZM\"],[\"ZW\",\"ZWE\",\"716\",\"ISO 3166-2:ZW\"],[\"AX\",\"ALA\",\"248\",\"ISO 3166-2:AX\"],[\"BQ\",\"BES\",\"535\",\"ISO 3166-2:BQ\"],[\"CW\",\"CUW\",\"531\",\"ISO 3166-2:CW\"],[\"GG\",\"GGY\",\"831\",\"ISO 3166-2:GG\"],[\"IM\",\"IMN\",\"833\",\"ISO 3166-2:IM\"],[\"JE\",\"JEY\",\"832\",\"ISO 3166-2:JE\"],[\"ME\",\"MNE\",\"499\",\"ISO 3166-2:ME\"],[\"BL\",\"BLM\",\"652\",\"ISO 3166-2:BL\"],[\"MF\",\"MAF\",\"663\",\"ISO 3166-2:MF\"],[\"RS\",\"SRB\",\"688\",\"ISO 3166-2:RS\"],[\"SX\",\"SXM\",\"534\",\"ISO 3166-2:SX\"],[\"SS\",\"SSD\",\"728\",\"ISO 3166-2:SS\"],[\"XK\",\"XKX\",\"983\",\"ISO 3166-2:XK\"]]');\n\n//# sourceURL=webpack://odin-weather-app/./node_modules/i18n-iso-countries/codes.json?");

/***/ }),

/***/ "./node_modules/i18n-iso-countries/langs/en.json":
/*!*******************************************************!*\
  !*** ./node_modules/i18n-iso-countries/langs/en.json ***!
  \*******************************************************/
/***/ ((module) => {

"use strict";
eval("module.exports = JSON.parse('{\"locale\":\"en\",\"countries\":{\"AF\":\"Afghanistan\",\"AL\":\"Albania\",\"DZ\":\"Algeria\",\"AS\":\"American Samoa\",\"AD\":\"Andorra\",\"AO\":\"Angola\",\"AI\":\"Anguilla\",\"AQ\":\"Antarctica\",\"AG\":\"Antigua and Barbuda\",\"AR\":\"Argentina\",\"AM\":\"Armenia\",\"AW\":\"Aruba\",\"AU\":\"Australia\",\"AT\":\"Austria\",\"AZ\":\"Azerbaijan\",\"BS\":\"Bahamas\",\"BH\":\"Bahrain\",\"BD\":\"Bangladesh\",\"BB\":\"Barbados\",\"BY\":\"Belarus\",\"BE\":\"Belgium\",\"BZ\":\"Belize\",\"BJ\":\"Benin\",\"BM\":\"Bermuda\",\"BT\":\"Bhutan\",\"BO\":\"Bolivia\",\"BA\":\"Bosnia and Herzegovina\",\"BW\":\"Botswana\",\"BV\":\"Bouvet Island\",\"BR\":\"Brazil\",\"IO\":\"British Indian Ocean Territory\",\"BN\":\"Brunei Darussalam\",\"BG\":\"Bulgaria\",\"BF\":\"Burkina Faso\",\"BI\":\"Burundi\",\"KH\":\"Cambodia\",\"CM\":\"Cameroon\",\"CA\":\"Canada\",\"CV\":\"Cape Verde\",\"KY\":\"Cayman Islands\",\"CF\":\"Central African Republic\",\"TD\":\"Chad\",\"CL\":\"Chile\",\"CN\":[\"People\\'s Republic of China\",\"China\"],\"CX\":\"Christmas Island\",\"CC\":\"Cocos (Keeling) Islands\",\"CO\":\"Colombia\",\"KM\":\"Comoros\",\"CG\":[\"Republic of the Congo\",\"Congo\"],\"CD\":[\"Democratic Republic of the Congo\",\"Congo\"],\"CK\":\"Cook Islands\",\"CR\":\"Costa Rica\",\"CI\":[\"Cote D\\'Ivoire\",\"Ivory Coast\"],\"HR\":\"Croatia\",\"CU\":\"Cuba\",\"CY\":\"Cyprus\",\"CZ\":[\"Czech Republic\",\"Czechia\"],\"DK\":\"Denmark\",\"DJ\":\"Djibouti\",\"DM\":\"Dominica\",\"DO\":\"Dominican Republic\",\"EC\":\"Ecuador\",\"EG\":\"Egypt\",\"SV\":\"El Salvador\",\"GQ\":\"Equatorial Guinea\",\"ER\":\"Eritrea\",\"EE\":\"Estonia\",\"ET\":\"Ethiopia\",\"FK\":\"Falkland Islands (Malvinas)\",\"FO\":\"Faroe Islands\",\"FJ\":\"Fiji\",\"FI\":\"Finland\",\"FR\":\"France\",\"GF\":\"French Guiana\",\"PF\":\"French Polynesia\",\"TF\":\"French Southern Territories\",\"GA\":\"Gabon\",\"GM\":[\"Republic of The Gambia\",\"The Gambia\",\"Gambia\"],\"GE\":\"Georgia\",\"DE\":\"Germany\",\"GH\":\"Ghana\",\"GI\":\"Gibraltar\",\"GR\":\"Greece\",\"GL\":\"Greenland\",\"GD\":\"Grenada\",\"GP\":\"Guadeloupe\",\"GU\":\"Guam\",\"GT\":\"Guatemala\",\"GN\":\"Guinea\",\"GW\":\"Guinea-Bissau\",\"GY\":\"Guyana\",\"HT\":\"Haiti\",\"HM\":\"Heard Island and McDonald Islands\",\"VA\":\"Holy See (Vatican City State)\",\"HN\":\"Honduras\",\"HK\":\"Hong Kong\",\"HU\":\"Hungary\",\"IS\":\"Iceland\",\"IN\":\"India\",\"ID\":\"Indonesia\",\"IR\":[\"Islamic Republic of Iran\",\"Iran\"],\"IQ\":\"Iraq\",\"IE\":\"Ireland\",\"IL\":\"Israel\",\"IT\":\"Italy\",\"JM\":\"Jamaica\",\"JP\":\"Japan\",\"JO\":\"Jordan\",\"KZ\":\"Kazakhstan\",\"KE\":\"Kenya\",\"KI\":\"Kiribati\",\"KP\":\"North Korea\",\"KR\":\"South Korea\",\"KW\":\"Kuwait\",\"KG\":\"Kyrgyzstan\",\"LA\":\"Lao People\\'s Democratic Republic\",\"LV\":\"Latvia\",\"LB\":\"Lebanon\",\"LS\":\"Lesotho\",\"LR\":\"Liberia\",\"LY\":\"Libya\",\"LI\":\"Liechtenstein\",\"LT\":\"Lithuania\",\"LU\":\"Luxembourg\",\"MO\":\"Macao\",\"MG\":\"Madagascar\",\"MW\":\"Malawi\",\"MY\":\"Malaysia\",\"MV\":\"Maldives\",\"ML\":\"Mali\",\"MT\":\"Malta\",\"MH\":\"Marshall Islands\",\"MQ\":\"Martinique\",\"MR\":\"Mauritania\",\"MU\":\"Mauritius\",\"YT\":\"Mayotte\",\"MX\":\"Mexico\",\"FM\":\"Micronesia, Federated States of\",\"MD\":\"Moldova, Republic of\",\"MC\":\"Monaco\",\"MN\":\"Mongolia\",\"MS\":\"Montserrat\",\"MA\":\"Morocco\",\"MZ\":\"Mozambique\",\"MM\":\"Myanmar\",\"NA\":\"Namibia\",\"NR\":\"Nauru\",\"NP\":\"Nepal\",\"NL\":\"Netherlands\",\"NC\":\"New Caledonia\",\"NZ\":\"New Zealand\",\"NI\":\"Nicaragua\",\"NE\":\"Niger\",\"NG\":\"Nigeria\",\"NU\":\"Niue\",\"NF\":\"Norfolk Island\",\"MK\":[\"The Republic of North Macedonia\",\"North Macedonia\"],\"MP\":\"Northern Mariana Islands\",\"NO\":\"Norway\",\"OM\":\"Oman\",\"PK\":\"Pakistan\",\"PW\":\"Palau\",\"PS\":[\"State of Palestine\",\"Palestine\"],\"PA\":\"Panama\",\"PG\":\"Papua New Guinea\",\"PY\":\"Paraguay\",\"PE\":\"Peru\",\"PH\":\"Philippines\",\"PN\":\"Pitcairn\",\"PL\":\"Poland\",\"PT\":\"Portugal\",\"PR\":\"Puerto Rico\",\"QA\":\"Qatar\",\"RE\":\"Reunion\",\"RO\":\"Romania\",\"RU\":[\"Russian Federation\",\"Russia\"],\"RW\":\"Rwanda\",\"SH\":\"Saint Helena\",\"KN\":\"Saint Kitts and Nevis\",\"LC\":\"Saint Lucia\",\"PM\":\"Saint Pierre and Miquelon\",\"VC\":\"Saint Vincent and the Grenadines\",\"WS\":\"Samoa\",\"SM\":\"San Marino\",\"ST\":\"Sao Tome and Principe\",\"SA\":\"Saudi Arabia\",\"SN\":\"Senegal\",\"SC\":\"Seychelles\",\"SL\":\"Sierra Leone\",\"SG\":\"Singapore\",\"SK\":\"Slovakia\",\"SI\":\"Slovenia\",\"SB\":\"Solomon Islands\",\"SO\":\"Somalia\",\"ZA\":\"South Africa\",\"GS\":\"South Georgia and the South Sandwich Islands\",\"ES\":\"Spain\",\"LK\":\"Sri Lanka\",\"SD\":\"Sudan\",\"SR\":\"Suriname\",\"SJ\":\"Svalbard and Jan Mayen\",\"SZ\":\"Eswatini\",\"SE\":\"Sweden\",\"CH\":\"Switzerland\",\"SY\":\"Syrian Arab Republic\",\"TW\":[\"Taiwan, Province of China\",\"Taiwan\"],\"TJ\":\"Tajikistan\",\"TZ\":[\"United Republic of Tanzania\",\"Tanzania\"],\"TH\":\"Thailand\",\"TL\":\"Timor-Leste\",\"TG\":\"Togo\",\"TK\":\"Tokelau\",\"TO\":\"Tonga\",\"TT\":\"Trinidad and Tobago\",\"TN\":\"Tunisia\",\"TR\":\"Turkey\",\"TM\":\"Turkmenistan\",\"TC\":\"Turks and Caicos Islands\",\"TV\":\"Tuvalu\",\"UG\":\"Uganda\",\"UA\":\"Ukraine\",\"AE\":\"United Arab Emirates\",\"GB\":[\"United Kingdom\",\"UK\",\"Great Britain\"],\"US\":[\"United States of America\",\"United States\",\"USA\"],\"UM\":\"United States Minor Outlying Islands\",\"UY\":\"Uruguay\",\"UZ\":\"Uzbekistan\",\"VU\":\"Vanuatu\",\"VE\":\"Venezuela\",\"VN\":\"Vietnam\",\"VG\":\"Virgin Islands, British\",\"VI\":\"Virgin Islands, U.S.\",\"WF\":\"Wallis and Futuna\",\"EH\":\"Western Sahara\",\"YE\":\"Yemen\",\"ZM\":\"Zambia\",\"ZW\":\"Zimbabwe\",\"AX\":\"Åland Islands\",\"BQ\":\"Bonaire, Sint Eustatius and Saba\",\"CW\":\"Curaçao\",\"GG\":\"Guernsey\",\"IM\":\"Isle of Man\",\"JE\":\"Jersey\",\"ME\":\"Montenegro\",\"BL\":\"Saint Barthélemy\",\"MF\":\"Saint Martin (French part)\",\"RS\":\"Serbia\",\"SX\":\"Sint Maarten (Dutch part)\",\"SS\":\"South Sudan\",\"XK\":\"Kosovo\"}}');\n\n//# sourceURL=webpack://odin-weather-app/./node_modules/i18n-iso-countries/langs/en.json?");

/***/ }),

/***/ "./node_modules/i18n-iso-countries/supportedLocales.json":
/*!***************************************************************!*\
  !*** ./node_modules/i18n-iso-countries/supportedLocales.json ***!
  \***************************************************************/
/***/ ((module) => {

"use strict";
eval("module.exports = JSON.parse('[\"cy\",\"dv\",\"sw\",\"eu\",\"af\",\"am\",\"ha\",\"ku\",\"ml\",\"no\",\"ps\",\"sd\",\"so\",\"sq\",\"ta\",\"tg\",\"tt\",\"ug\",\"ur\",\"vi\",\"ar\",\"az\",\"be\",\"bg\",\"bn\",\"bs\",\"ca\",\"cs\",\"da\",\"de\",\"el\",\"en\",\"es\",\"et\",\"fa\",\"fi\",\"fr\",\"gl\",\"el\",\"he\",\"hi\",\"hr\",\"hu\",\"hy\",\"id\",\"is\",\"it\",\"ja\",\"ka\",\"kk\",\"km\",\"ko\",\"ky\",\"lt\",\"lv\",\"mk\",\"mn\",\"mr\",\"ms\",\"nb\",\"nl\",\"nn\",\"pl\",\"pt\",\"ro\",\"ru\",\"sk\",\"sl\",\"sr\",\"sv\",\"th\",\"tr\",\"uk\",\"uz\",\"zh\"]');\n\n//# sourceURL=webpack://odin-weather-app/./node_modules/i18n-iso-countries/supportedLocales.json?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.js");
/******/ 	
/******/ })()
;